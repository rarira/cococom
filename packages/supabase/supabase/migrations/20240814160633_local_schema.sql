create table "public"."memos" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "userId" uuid,
    "itemId" integer,
    "content" text
);


alter table "public"."memos" enable row level security;

CREATE UNIQUE INDEX memos_pkey ON public.memos USING btree (id);

alter table "public"."memos" add constraint "memos_pkey" PRIMARY KEY using index "memos_pkey";

alter table "public"."memos" add constraint "memos_itemId_fkey" FOREIGN KEY ("itemId") REFERENCES items(id) ON DELETE CASCADE not valid;

alter table "public"."memos" validate constraint "memos_itemId_fkey";

alter table "public"."memos" add constraint "memos_userId_fkey" FOREIGN KEY ("userId") REFERENCES profiles(id) ON DELETE CASCADE not valid;

alter table "public"."memos" validate constraint "memos_userId_fkey";

grant delete on table "public"."memos" to "anon";

grant insert on table "public"."memos" to "anon";

grant references on table "public"."memos" to "anon";

grant select on table "public"."memos" to "anon";

grant trigger on table "public"."memos" to "anon";

grant truncate on table "public"."memos" to "anon";

grant update on table "public"."memos" to "anon";

grant delete on table "public"."memos" to "authenticated";

grant insert on table "public"."memos" to "authenticated";

grant references on table "public"."memos" to "authenticated";

grant select on table "public"."memos" to "authenticated";

grant trigger on table "public"."memos" to "authenticated";

grant truncate on table "public"."memos" to "authenticated";

grant update on table "public"."memos" to "authenticated";

grant delete on table "public"."memos" to "service_role";

grant insert on table "public"."memos" to "service_role";

grant references on table "public"."memos" to "service_role";

grant select on table "public"."memos" to "service_role";

grant trigger on table "public"."memos" to "service_role";

grant truncate on table "public"."memos" to "service_role";

grant update on table "public"."memos" to "service_role";

create policy "Enable insert for authenticated users only"
on "public"."memos"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."memos"
as permissive
for select
to public
using (true);



